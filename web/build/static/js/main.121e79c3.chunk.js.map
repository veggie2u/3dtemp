{"version":3,"sources":["react-auth0-spa.js","components/NavBar.js","utils/history.js","components/PrivateRoute.js","components/Profile.js","components/TempCard.js","components/FetchTemp.js","components/FakeTempCard.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","NavBar","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","Fragment","Button","to","onClick","createBrowserHistory","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","Profile","src","picture","alt","name","email","JSON","stringify","maxWidth","divider","margin","cardActionArea","textAlign","TempCard","log","feed","Card","CardHeader","avatar","Avatar","action","NotificationImportant","subheader","format","parseISO","updated_at","CardMedia","height","image","CardActionArea","CardContent","Box","display","alignItems","justifyContent","last_value","Timeline","fontSize","Fetch","feeds","data","setData","fetch","res","json","response","fetchData","Grid","container","justify","map","item","key","id","FakeTempCard","Splash","paddingTop","App","CssBaseline","Container","exact","Boolean","hostname","match","ReactDOM","StrictMode","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.121e79c3.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          3D Temp\n        </Typography>\n        {isAuthenticated && (<React.Fragment>\n          <Button color=\"inherit\"><Link to=\"/\">Home</Link></Button>\n          <Button color=\"inherit\"><Link to=\"/profile\">Profile</Link></Button>\n          <Button color=\"inherit\"><Link to=\"/fetch\">Fetch</Link></Button>\n        </React.Fragment>)}\n        {!isAuthenticated && (\n          <Button color=\"inherit\" onClick={() => loginWithRedirect({})}>Login</Button>\n        )}\n        {isAuthenticated && <Button color=\"inherit\" onClick={() => logout()}>Logout</Button>}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","/**\n * This component will \"wrap\" another by taking a component as a prop.\n * This will protect that component. Intended to be used to protect routes.\n */\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React, { Fragment } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Profile = () => {\n  const { loading, user } = useAuth0();\n\n  if (loading || !user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Fragment>\n      <img src={user.picture} alt=\"Profile\" />\n\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n      <code>{JSON.stringify(user, null, 2)}</code>\n    </Fragment>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { parseISO, format } from 'date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Timeline, NotificationImportant } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  divider: {\n    margin: `0 20px`\n  },\n  cardActionArea: {\n    textAlign: 'center',\n  }\n});\n\nconst TempCard = (props) => {\n  const classes = useStyles();\n  console.log(props.feed);\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"Sensor Id\" className={classes.avatar}>\n            03\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"Notification Important\">\n            <NotificationImportant color=\"secondary\"/>\n          </IconButton>\n        }\n        title={props.feed.name}\n        subheader={`Recorded @ ${format(parseISO(props.feed.updated_at), 'MM/dd hh:mm a')}`}\n      />\n      <CardMedia\n        component=\"img\"\n        alt=\"Sensor Location Image\"\n        height=\"160\"\n        image=\"/images/testImage.jpeg\"\n        title=\"Sensor Location\"\n      />\n      <CardActionArea className={classes.cardActionArea}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box flexGrow={1} justifyContent=\"flex-start\">\n              <Typography variant=\"h4\" color=\"textSecondary\" component=\"span\">\n                {props.feed.last_value}\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">\n                &nbsp;C\n              </Typography>\n            </Box>\n            <Box flexGrow={2} justifyContent=\"center\">\n              <Timeline fontSize=\"large\" color=\"primary\" />\n            </Box>\n            <Box flexGrow={1} justifyContent=\"flex-end\">\n              <Typography variant=\"h4\" color=\"textSecondary\" component=\"span\">\n                {props.feed.last_value}\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">\n                &nbsp;Rh\n              </Typography>\n            </Box>\n          </Box>\n        </CardContent>\n      </CardActionArea>\n      \n    </Card>\n  );\n}\n\nexport default TempCard;\n","import React, { useState, useEffect } from \"react\";\nimport { parseISO, format } from 'date-fns';\nimport Grid from \"@material-ui/core/Grid\";\nimport TempCard from \"./TempCard\";\n\nconst Fetch = () => {\n  const [data, setData] = useState({ feeds: [] });\n\n  const url = '/api/fetchGroup';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let res = await fetch(url);\n      let response = await res.json();\n      console.log(response);\n      setData(response);\n    };\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <React.Fragment>\n      <Grid container justify=\"center\" spacing={3}>\n        {data.feeds.map(feed => (\n          <Grid item key={feed.id}>\n            <TempCard feed={feed} />\n          </Grid>\n        ))}\n      </Grid>\n      <table>\n        <tbody>\n        {data.feeds.map(feed => (\n          <tr key={feed.key}>\n            <td>{feed.name}</td><td>{feed.last_value}</td><td>{format(parseISO(feed.updated_at), 'MM/dd hh:mm:ss a')}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </React.Fragment>\n  );\n};\n\nexport default Fetch;\n","import React from 'react';\nimport TempCard from './TempCard';\n\nconst feed = {\n  id: \"02\",\n  name: \"Humidity 1\",\n  last_value: \"23.0\",\n  updated_at: \"2020-04-07T01:08:16Z\"\n};\n\nconst FakeTempCard = () => {\n  const props = { feed };\n  return (\n    <TempCard feed={props.feed} />\n  );\n}\n\nexport default FakeTempCard;\n","import React, { Fragment } from \"react\";\nimport FakeTempCard from \"./FakeTempCard\"\n\nconst Splash = () => {\n  return (\n    <Fragment>\n      <h1>3D Temp</h1>\n      <FakeTempCard />\n    </Fragment>\n  );\n};\n\nexport default Splash;\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { CssBaseline } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport history from \"./utils/history\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Profile from \"./components/Profile\";\nimport Fetch from \"./components/FetchTemp\";\nimport Splash from \"./components/Splash\";\n\nconst useStyles = makeStyles({\n  root: {\n    paddingTop: '25px',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <CssBaseline />\n        <header>\n          <NavBar />\n        </header>\n        <Container maxWidth={false} className={classes.root}>\n          <Switch>\n            <Route path=\"/\" exact component={Splash} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <PrivateRoute path=\"/fetch\" component={Fetch} />\n          </Switch>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={config.domain}\n      client_id={config.clientId}\n      redirect_uri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n    >\n      <App />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}